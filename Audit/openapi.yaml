openapi: 3.0.0
info:
  description: This API provides audit info
  version: "1.0.0"
  title: Audit API
  contact:
    email: asoboleva@my.bcit.ca
paths:
  /movies/movie_ratings:
    get:
      summary: gets a movie ratings from history
      operationId: app.get_movie_ratings
      description: Gets movie ratings from the event store
      parameters:
        - name: index
          in: query
          description: Gets the movie rating at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description: Successfully returned a movie rating event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieRatings'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /movies/movie_saved:
    get:
      summary: gets saved movies from history
      operationId: app.get_movie_saved
      description: Gets saved movies from event store
      parameters:
        - name: index
          in: query
          description: Gets the saved movie at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description: Successfully returned a saved movie event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieSaved'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /health:
    get:
      tags:
        - dev
      summary: check if service is up or down
      operationId: app.health
      description: return 200 if service is up
      responses:
        '200':
          description: Service is up
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  schemas:
    MovieRatings:
      type: object
      required:
        - movie_id
        - rating
        - review
      properties:
        movie_id:
          type: string
          example: breaking_bad_01
        movie_name:
          type: string
          example: Breaking Bad
        rating:
          type: number
          example: 10
        review:
          type: string
          example: its great yall
    MovieSaved:
      type: object
      required:
        - user_id
        - movie_id
        - season
      properties:
        user_id:
          type: number
          example: 19238902
        movie_id:
          type: string
          example: breaking_bad
        save_date:
          type: string
          format: date
          example: '2023-08-09'
        notes:
          type: string
          example: "Must-watch series"
        season:
          type: number
          example: 1
    Health:
      required:
      - app_status
      properties:
        app_status:
          type: string
          example: "Running"